<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        Xg2hGAAAAABJRU5ErkJggg==
</value>
  </data>
</root>